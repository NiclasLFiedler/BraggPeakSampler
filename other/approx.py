import numpy as np
import matplotlib.pyplot as plt


I_h2o = 75e-6
I_pmma = 74e-6
I_pbwo4 = 600.7e-6

Z_eff_h2o = 10
Z_eff_pmma = 54
Z_eff_pbwo4 = 188

A_eff_h2o = 18.01528  # g/mol
A_eff_pmma = 100.18  # g/mol
A_eff_pbwo4 = 455.04

rho_h2o = 1.0  # g/cm^3
rho_pmma = 1.19  # g/cm^3
rho_pbwo4 = 8.3  # g/cm^3

rho_lung = 1.05
Aeff_lung = 1  # g/mol (approximate for lung tissue)
Zeff_lung = 0.5496

I_1 = I_h2o
Z_1 = Z_eff_h2o
A_1 = A_eff_h2o
rho_1 = rho_h2o

I_2 = I_pbwo4
Z_2 = Z_eff_pbwo4
A_2 = A_eff_pbwo4
rho_2 = rho_pbwo4

M = 938.272      #proton mass in MeV/c^2

# Define the function
def stoppingratio(beta, I_m, I_a):
    return rho_2*Z_2/Z_1 * A_1/A_2*(np.log(2*0.511/I_a)+np.log(beta**2/(1-beta**2))-beta**2)/(np.log(2*0.511/I_m)+np.log(beta**2/(1-beta**2))-beta**2)

def stoppingratioTaylor(beta, I_m, I_a):
    return rho_2*Z_2/Z_1 * A_1/A_2*np.log(2*0.511/I_a)/(np.log(2*0.511/I_m))*(1+(np.log(beta**2/(1-beta**2))-beta**2)*(1/np.log(2*0.511/I_a)-1/np.log(2*0.511/I_m)))

def stoppingratioApprox(I_m, I_a):
    return rho_2*Z_2/Z_1 * A_1/A_2*np.log(2*0.511/I_a)/(np.log(2*0.511/I_m))

def beta(T):
    return np.sqrt(1-1/((M+T)/M)**2)

x = np.linspace(0.001, 0.999, 100000)
y_1 = stoppingratio(x, I_1, I_2)
y_2 = stoppingratioTaylor(x, I_1, I_2)
y_3 = stoppingratioApprox(I_1, I_2) * np.ones_like(x)
y_4 = rho_2/rho_1 * np.ones_like(x)

ICRU_E = [1.000E-03, 1.500E-03, 2.000E-03, 2.500E-03, 3.000E-03, 4.000E-03, 5.000E-03, 6.000E-03, 7.000E-03, 8.000E-03, 9.000E-03, 1.000E-02, 1.250E-02, 1.500E-02, 1.750E-02, 2.000E-02, 2.250E-02, 2.500E-02, 2.750E-02, 3.000E-02, 3.500E-02, 4.000E-02, 4.500E-02, 5.000E-02, 5.500E-02, 6.000E-02, 6.500E-02, 7.000E-02, 7.500E-02, 8.000E-02, 8.500E-02, 9.000E-02, 9.500E-02, 1.000E-01, 1.250E-01, 1.500E-01, 1.750E-01, 2.000E-01, 2.250E-01, 2.500E-01, 2.750E-01, 3.000E-01, 3.500E-01, 4.000E-01, 4.500E-01, 5.000E-01, 5.500E-01, 6.000E-01, 6.500E-01, 7.000E-01, 7.500E-01, 8.000E-01, 8.500E-01, 9.000E-01, 9.500E-01, 1.000E+00, 1.250E+00, 1.500E+00, 1.750E+00, 2.000E+00, 2.250E+00, 2.500E+00, 2.750E+00, 3.000E+00, 3.500E+00, 4.000E+00, 4.500E+00, 5.000E+00, 5.500E+00, 6.000E+00, 6.500E+00, 7.000E+00, 7.500E+00, 8.000E+00, 8.500E+00, 9.000E+00, 9.500E+00, 1.000E+01, 1.250E+01, 1.500E+01, 1.750E+01, 2.000E+01, 2.500E+01, 2.750E+01, 3.000E+01, 3.500E+01, 4.000E+01, 4.500E+01, 5.000E+01, 5.500E+01, 6.000E+01, 6.500E+01, 7.000E+01, 7.500E+01, 8.000E+01, 8.500E+01, 9.000E+01, 9.500E+01, 1.000E+02, 1.250E+02, 1.500E+02, 1.750E+02, 2.000E+02, 2.250E+02, 2.500E+02, 2.750E+02, 3.000E+02, 3.500E+02, 4.000E+02, 4.500E+02, 5.000E+02, 5.500E+02, 6.000E+02, 6.500E+02, 7.000E+02, 7.500E+02, 8.000E+02, 8.500E+02, 9.000E+02, 9.500E+02, 1.000E+03, 1.500E+03, 2.000E+03, 2.500E+03, 3.000E+03, 4.000E+03, 5.000E+03, 6.000E+03, 7.000E+03, 8.000E+03, 9.000E+03, 1.000E+04]


stoppingGeant4H2O = [133.7, 163.515, 189.098, 211.438, 231.589, 267.5, 299, 327.599, 353.775, 378.199, 401.393, 422.9, 467.461, 503.591, 536.632, 567.3, 594.982, 619.845, 642.31, 662.784, 698.814, 729.001, 753.857, 774, 790.099, 802.611, 811.915, 818.374, 822.333, 824.094, 823.936, 822.123, 818.904, 814.5, 780.024, 736.009, 694.865, 658.499, 625.508, 595.533, 568.288, 543.527, 500.46, 464.298, 433.303, 406.5, 383.06, 362.386, 344.027, 327.635, 312.943, 299.704, 287.693, 276.739, 266.685, 257.4, 219.948, 193.427, 173.13, 156.899, 143.603, 132.71, 123.689, 116.01, 103.297, 93.1895, 85.0622, 78.4199, 72.8141, 68.0052, 63.8394, 60.2008, 57.0051, 54.171, 51.6269, 49.3275, 47.2355, 45.32, 37.7922, 32.6955, 28.8883, 25.8898, 21.5364, 19.9617, 18.6417, 16.4825, 14.7899, 13.4538, 12.38, 11.4823, 10.7192, 10.0652, 9.50038, 9.00955, 8.57818, 8.19351, 7.84778, 7.53481, 7.25, 6.13179, 5.35621, 4.79354, 4.35966, 4.01743, 3.74815, 3.53393, 3.35747, 3.07396, 2.85695, 2.69086, 2.56143, 2.45567, 2.36771, 2.29417, 2.23232, 2.18005, 2.13532, 2.09638, 2.06215, 2.03177, 2.00452, 1.84114, 1.76976, 1.73124, 1.71056, 1.6892, 1.67997, 1.67655, 1.67569, 1.67603, 1.67662, 1.67715]

ICRUstoppingTotal_H2o = [1.769E+02 , 1.984E+02 , 2.184E+02 , 2.370E+02 , 2.544E+02 , 2.864E+02 , 3.153E+02 , 3.420E+02 , 3.667E+02 , 3.900E+02 , 4.120E+02 , 4.329E+02 , 4.745E+02 , 5.110E+02 , 5.437E+02 , 5.733E+02 , 6.001E+02 , 6.245E+02 , 6.467E+02 , 6.671E+02 , 7.028E+02 , 7.324E+02 , 7.569E+02 , 7.768E+02 , 7.927E+02 , 8.050E+02 , 8.142E+02 , 8.205E+02 , 8.243E+02 , 8.260E+02 , 8.258E+02 , 8.239E+02 , 8.206E+02 , 8.161E+02 , 7.814E+02 , 7.371E+02 , 6.969E+02 , 6.613E+02 , 6.294E+02 , 6.006E+02 , 5.744E+02 , 5.504E+02 , 5.080E+02 , 4.719E+02 , 4.406E+02 , 4.132E+02 , 3.891E+02 , 3.680E+02 , 3.492E+02 , 3.325E+02 , 3.175E+02 , 3.039E+02 , 2.917E+02 , 2.805E+02 , 2.702E+02 , 2.608E+02 , 2.229E+02 , 1.957E+02 , 1.749E+02 , 1.586E+02 , 1.454E+02 , 1.344E+02 , 1.251E+02 , 1.172E+02 , 1.042E+02 , 9.404E+01 , 8.586E+01 , 7.911E+01 , 7.343E+01 , 6.858E+01 , 6.438E+01 , 6.071E+01 , 5.747E+01 , 5.460E+01 , 5.202E+01 , 4.969E+01 , 4.759E+01 , 4.567E+01 , 3.815E+01 , 3.292E+01 , 2.905E+01 , 2.607E+01 , 2.175E+01 , 2.013E+01 , 1.876E+01 , 1.656E+01 , 1.488E+01 , 1.354E+01 , 1.245E+01 , 1.154E+01 , 1.078E+01 , 1.013E+01 , 9.559E+00 , 9.063E+00 , 8.625E+00 , 8.236E+00 , 7.888E+00 , 7.573E+00 , 7.289E+00 , 6.192E+00 , 5.445E+00 , 4.903E+00 , 4.492E+00 , 4.170E+00 , 3.911E+00 , 3.698E+00 , 3.520E+00 , 3.241E+00 , 3.032E+00 , 2.871E+00 , 2.743E+00 , 2.640E+00 , 2.556E+00 , 2.485E+00 , 2.426E+00 , 2.376E+00 , 2.333E+00 , 2.296E+00 , 2.264E+00 , 2.236E+00 , 2.211E+00 , 2.070E+00 , 2.021E+00 , 2.004E+00 , 2.001E+00 , 2.012E+00 , 2.031E+00 , 2.052E+00 , 2.072E+00 , 2.091E+00 , 2.109E+00 , 2.126E+00]

ICRUAir = [1.414E+02 , 1.651E+02 , 1.855E+02 , 2.038E+02 , 2.206E+02 , 2.507E+02 , 2.776E+02 , 3.021E+02 , 3.248E+02 , 3.460E+02 , 3.660E+02 , 3.850E+02 , 4.224E+02 , 4.552E+02 , 4.843E+02 , 5.106E+02 , 5.343E+02 , 5.558E+02 , 5.755E+02 , 5.934E+02 , 6.246E+02 , 6.506E+02 , 6.721E+02 , 6.897E+02 , 7.038E+02 , 7.149E+02 , 7.233E+02 , 7.293E+02 , 7.333E+02 , 7.355E+02 , 7.360E+02 , 7.352E+02 , 7.332E+02 , 7.301E+02 , 7.038E+02 , 6.680E+02 , 6.298E+02 , 5.928E+02 , 5.589E+02 , 5.284E+02 , 5.011E+02 , 4.767E+02 , 4.353E+02 , 4.015E+02 , 3.736E+02 , 3.501E+02 , 3.300E+02 , 3.123E+02 , 2.967E+02 , 2.826E+02 , 2.701E+02 , 2.589E+02 , 2.486E+02 , 2.393E+02 , 2.308E+02 , 2.229E+02 , 1.912E+02 , 1.683E+02 , 1.509E+02 , 1.371E+02 , 1.258E+02 , 1.165E+02 , 1.086E+02 , 1.018E+02 , 9.068E+01 , 8.197E+01 , 7.492E+01 , 6.909E+01 , 6.417E+01 , 5.997E+01 , 5.633E+01 , 5.315E+01 , 5.033E+01 , 4.783E+01 , 4.559E+01 , 4.357E+01 , 4.173E+01 , 4.006E+01 , 3.351E+01 , 2.894E+01 , 2.555E+01 , 2.294E+01 , 1.915E+01 , 1.773E+01 , 1.653E+01 , 1.460E+01 , 1.312E+01 , 1.194E+01 , 1.099E+01 , 1.019E+01 , 9.517E+00 , 8.942E+00 , 8.443E+00 , 8.006E+00 , 7.620E+00 , 7.277E+00 , 6.970E+00 , 6.693E+00 , 6.443E+00 , 5.475E+00 , 4.816E+00 , 4.338E+00 , 3.976E+00 , 3.691E+00 , 3.462E+00 , 3.275E+00 , 3.118E+00 , 2.871E+00 , 2.687E+00 , 2.544E+00 , 2.431E+00 , 2.340E+00 , 2.266E+00 , 2.203E+00 , 2.151E+00 , 2.107E+00 , 2.069E+00 , 2.037E+00 , 2.008E+00 , 1.984E+00 , 1.963E+00 , 1.850E+00 , 1.820E+00 , 1.818E+00 , 1.828E+00 , 1.861E+00 , 1.898E+00 , 1.934E+00 , 1.967E+00 , 1.998E+00 , 2.026E+00 , 2.052E+00]

ICRUstoppingTotal_PMMA = [2.147E+02 ,2.463E+02 ,2.746E+02 ,3.004E+02 ,3.242E+02 ,3.635E+02 ,3.994E+02 ,4.322E+02 ,4.624E+02 ,4.899E+02 ,5.153E+02 ,5.391E+02 ,5.870E+02 ,6.277E+02 ,6.632E+02 ,6.948E+02 ,7.229E+02 ,7.479E+02 ,7.700E+02 ,7.898E+02 ,8.244E+02 ,8.537E+02 ,8.779E+02 ,8.972E+02 ,9.118E+02 ,9.224E+02 ,9.296E+02 ,9.340E+02 ,9.358E+02 ,9.355E+02 ,9.334E+02 ,9.296E+02 ,9.245E+02 ,9.183E+02 ,8.757E+02 ,8.243E+02 ,7.723E+02 ,7.232E+02 ,6.769E+02 ,6.346E+02 ,5.969E+02 ,5.634E+02 ,5.077E+02 ,4.639E+02 ,4.289E+02 ,4.006E+02 ,3.770E+02 ,3.564E+02 ,3.383E+02 ,3.222E+02 ,3.078E+02 ,2.948E+02 ,2.830E+02 ,2.722E+02 ,2.623E+02 ,2.532E+02 ,2.168E+02 ,1.905E+02 ,1.705E+02 ,1.546E+02 ,1.418E+02 ,1.311E+02 ,1.221E+02 ,1.143E+02 ,1.017E+02 ,9.179E+01 ,8.379E+01 ,7.719E+01 ,7.164E+01 ,6.690E+01 ,6.280E+01 ,5.921E+01 ,5.605E+01 ,5.324E+01 ,5.073E+01 ,4.845E+01 ,4.640E+01 ,4.452E+01 ,3.719E+01 ,3.208E+01 ,2.831E+01 ,2.539E+01 ,2.118E+01 ,1.961E+01 ,1.827E+01 ,1.613E+01 ,1.449E+01 ,1.318E+01 ,1.212E+01 ,1.124E+01 ,1.050E+01 ,9.858E+00 ,9.306E+00 ,8.823E+00 ,8.397E+00 ,8.018E+00 ,7.678E+00 ,7.372E+00 ,7.095E+00 ,6.027E+00 ,5.300E+00 ,4.772E+00 ,4.372E+00 ,4.058E+00 ,3.806E+00 ,3.599E+00 ,3.426E+00 ,3.154E+00 ,2.951E+00 ,2.794E+00 ,2.670E+00 ,2.569E+00 ,2.487E+00 ,2.418E+00 ,2.361E+00 ,2.312E+00 ,2.269E+00 ,2.232E+00 ,2.199E+00 ,2.170E+00 ,2.145E+00 ,2.004E+00 ,1.954E+00 ,1.937E+00 ,1.934E+00 ,1.945E+00 ,1.964E+00 ,1.985E+00 ,2.005E+00 ,2.024E+00 ,2.042E+00 ,2.059E+00]

Geant4Lung = [207.317, 236.938, 262.307, 286.276, 308.601, 349.292, 385.741, 419.294, 450.471, 479.523, 507.014, 533.162, 584.034, 628.145, 667.156, 701.991, 733.253, 761.366, 786.757, 809.671, 849.11, 881.203, 905.603, 924.495, 938.794, 949.126, 956.046, 960.024, 961.469, 960.754, 958.205, 954.076, 948.62, 942.045, 898.031, 845.477, 792.3, 742.123, 696.341, 655.237, 618.598, 585.991, 530.978, 486.684, 450.376, 420.068, 394.349, 372.2, 352.88, 335.841, 320.67, 307.052, 294.744, 283.547, 273.307, 263.896, 225.987, 198.734, 177.943, 161.475, 147.636, 136.203, 126.376, 117.985, 104.378, 94.168, 85.9249, 79.1048, 73.3741, 68.4849, 64.2606, 60.5722, 57.3219, 54.4276, 51.8372, 49.5043, 47.3913, 45.468, 37.9436, 32.715, 28.8533, 25.8772, 21.5757, 19.9665, 18.6046, 16.4218, 14.7465, 13.4177, 12.3366, 11.439, 10.6811, 10.0324, 9.47048, 8.97886, 8.54495, 8.15905, 7.81353, 7.5023, 7.22044, 6.13329, 5.39319, 4.85649, 4.44951, 4.13044, 3.87377, 3.66302, 3.48705, 3.21047, 3.00374, 2.84409, 2.71767, 2.61556, 2.53176, 2.46209, 2.40352, 2.35385, 2.31139, 2.27485, 2.24325, 2.21504, 2.18996, 2.05142, 2.00513, 1.99145, 1.99159, 2.00765, 2.03004, 2.05293, 2.07467, 2.09488, 2.11345, 2.13055]

Geant4PWO = [30.6453, 36.3445, 41.1871, 45.4843, 49.3927, 56.3776, 62.5641, 68.1969, 73.3795, 78.2047, 82.7814, 87.1078, 95.8031, 103.442, 110.345, 116.636, 122.415, 127.752, 132.702, 137.31, 145.631, 152.918, 159.323, 164.958, 169.911, 174.256, 178.048, 181.339, 184.175, 186.599, 188.65, 190.357, 191.75, 192.858, 194.939, 192.934, 188.544, 182.87, 176.621, 170.239, 163.987, 158.014, 147.152, 137.787, 129.776, 122.907, 116.973, 111.803, 107.252, 103.21, 99.5876, 96.3166, 93.3418, 90.6184, 88.1111, 85.7909, 76.2303, 69.1035, 63.461, 58.8365, 55.163, 51.998, 48.8877, 46.1436, 41.5807, 38.5634, 35.9551, 33.679, 31.683, 29.9395, 28.4142, 27.054, 25.8426, 24.7448, 23.7486, 22.8366, 22.0015, 21.2338, 18.1463, 15.9268, 14.242, 12.9174, 10.9585, 10.2118, 9.57361, 8.53863, 7.72878, 7.07857, 6.54213, 6.09747, 5.71979, 5.39466, 5.1136, 4.86604, 4.64642, 4.45015, 4.27359, 4.11391, 3.96883, 3.40435, 3.01569, 2.73141, 2.51462, 2.34358, 2.20541, 2.09166, 1.99637, 1.8463, 1.73443, 1.648, 1.57961, 1.52471, 1.47979, 1.44256, 1.4114, 1.38511, 1.36277, 1.34369, 1.32731, 1.3132, 1.30102, 1.24097, 1.22999, 1.2347, 1.24543, 1.27219, 1.2992, 1.32421, 1.34687, 1.36779, 1.38649, 1.40354]

ICRUbeta = [beta(T) for T in ICRU_E]
ICRURatio = [8.3*Geant4PWO[index]/(ICRUstoppingTotal_H2o[index]) for index in range(len(ICRU_E))]
#bax = brokenaxes(ylims=((0.6, 0.85), (0.97, 5)), hspace=.05)
fig, ax = plt.subplots(figsize=(15, 10))

# Create the plot
ax.plot(x, y_1, label=r'Eq. 49', color="#37eb0a", linewidth=2)
ax.plot(x, y_2, label=r'Eq. 52', color='#ff7f0e', linestyle='--', linewidth=2)
ax.plot(x, y_3, label=r'Eq. 53', color="#fc1100", linestyle=':', linewidth=2)
ax.plot(x, y_4, label=r'$\rho_{PbWO4}/\rho_{H_2O}$', color="#000000", linestyle='-.', linewidth=2)
ax.plot(ICRUbeta, ICRURatio, label=r'PStar/Geant4 stopping powers ', color="#0000ff", marker='o', markersize=4, linestyle='None')

ax.grid(True, which='both', linestyle='--', alpha=0.6) # Add grid, labels, and title
ax.set_title(r'Stopping Power Ratio for H$_2$O and PbWO4', fontsize=16)
ax.set_xlabel(r'$\beta$', fontsize=14)
ax.set_ylabel(r'$S_{PbWO4}/S_{H_2O}$', fontsize=14)
ax.legend(loc='upper center', fontsize=12)
plt.tight_layout()
#plt.ylim(1.10, 1.5)
#bax.yscale('log')
#bax.xscale('log')
# Show the plot
plt.show()
