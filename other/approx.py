import numpy as np
import matplotlib.pyplot as plt
from brokenaxes import brokenaxes

I_h2o = 75e-6
I_pmma = 74e-6
I_pbwo4 = 600.7e-6

Z_eff_h2o = 10
Z_eff_pmma = 54
Z_eff_pbwo4 = 188

A_eff_h2o = 18.01528  # g/mol
A_eff_pmma = 100.18  # g/mol
A_eff_pbwo4 = 455.04

rho_h2o = 1.0  # g/cm^3
rho_pmma = 1.19  # g/cm^3
rho_pbwo4 = 8.3  # g/cm^3

I_1 = I_h2o
Z_1 = Z_eff_h2o
A_1 = A_eff_h2o
rho_1 = rho_h2o

I_2 = I_pmma
Z_2 = Z_eff_pmma
A_2 = A_eff_pmma
rho_2 = rho_pmma

M = 938.272      #proton mass in MeV/c^2

# Define the function
def stoppingratio(beta, I_m, I_a):
    return rho_2*Z_2/Z_1 * A_1/A_2*(np.log(2*0.511/I_a)+np.log(beta**2/(1-beta**2))-beta**2)/(np.log(2*0.511/I_m)+np.log(beta**2/(1-beta**2))-beta**2)

def stoppingratioTaylor(beta, I_m, I_a):
    return rho_2*Z_2/Z_1 * A_1/A_2*np.log(2*0.511/I_a)/(np.log(2*0.511/I_m))*(1+(np.log(beta**2/(1-beta**2))-beta**2)*(1/np.log(2*0.511/I_a)-1/np.log(2*0.511/I_m)))

def stoppingratioApprox(I_m, I_a):
    return rho_2*Z_2/Z_1 * A_1/A_2*np.log(2*0.511/I_a)/(np.log(2*0.511/I_m))

def beta(T):
    return np.sqrt(1-1/((M+T)/M)**2)

x = np.linspace(0.001, 0.999, 100000)
y_1 = stoppingratio(x, I_1, I_2)
y_2 = stoppingratioTaylor(x, I_1, I_2)
y_3 = stoppingratioApprox(I_1, I_2) * np.ones_like(x)
y_4 = rho_2/rho_1 * np.ones_like(x)

ICRU_E = [1.000E-03, 1.500E-03, 2.000E-03, 2.500E-03, 3.000E-03, 4.000E-03, 5.000E-03, 6.000E-03, 7.000E-03, 8.000E-03, 9.000E-03, 1.000E-02, 1.250E-02, 1.500E-02, 1.750E-02, 2.000E-02, 2.250E-02, 2.500E-02, 2.750E-02, 3.000E-02, 3.500E-02, 4.000E-02, 4.500E-02, 5.000E-02, 5.500E-02, 6.000E-02, 6.500E-02, 7.000E-02, 7.500E-02, 8.000E-02, 8.500E-02, 9.000E-02, 9.500E-02, 1.000E-01, 1.250E-01, 1.500E-01, 1.750E-01, 2.000E-01, 2.250E-01, 2.500E-01, 2.750E-01, 3.000E-01, 3.500E-01, 4.000E-01, 4.500E-01, 5.000E-01, 5.500E-01, 6.000E-01, 6.500E-01, 7.000E-01, 7.500E-01, 8.000E-01, 8.500E-01, 9.000E-01, 9.500E-01, 1.000E+00, 1.250E+00, 1.500E+00, 1.750E+00, 2.000E+00, 2.250E+00, 2.500E+00, 2.750E+00, 3.000E+00, 3.500E+00, 4.000E+00, 4.500E+00, 5.000E+00, 5.500E+00, 6.000E+00, 6.500E+00, 7.000E+00, 7.500E+00, 8.000E+00, 8.500E+00, 9.000E+00, 9.500E+00, 1.000E+01, 1.250E+01, 1.500E+01, 1.750E+01, 2.000E+01, 2.500E+01, 2.750E+01, 3.000E+01, 3.500E+01, 4.000E+01, 4.500E+01, 5.000E+01, 5.500E+01, 6.000E+01, 6.500E+01, 7.000E+01, 7.500E+01, 8.000E+01, 8.500E+01, 9.000E+01, 9.500E+01, 1.000E+02, 1.250E+02, 1.500E+02, 1.750E+02, 2.000E+02, 2.250E+02, 2.500E+02, 2.750E+02, 3.000E+02, 3.500E+02, 4.000E+02, 4.500E+02, 5.000E+02, 5.500E+02, 6.000E+02, 6.500E+02, 7.000E+02, 7.500E+02, 8.000E+02, 8.500E+02, 9.000E+02, 9.500E+02, 1.000E+03, 1.500E+03, 2.000E+03, 2.500E+03, 3.000E+03, 4.000E+03, 5.000E+03, 6.000E+03, 7.000E+03, 8.000E+03, 9.000E+03, 1.000E+04]


stoppingGeant4H2O = [133.7, 163.515, 189.098, 211.438, 231.589, 267.5, 299, 327.599, 353.775, 378.199, 401.393, 422.9, 467.461, 503.591, 536.632, 567.3, 594.982, 619.845, 642.31, 662.784, 698.814, 729.001, 753.857, 774, 790.099, 802.611, 811.915, 818.374, 822.333, 824.094, 823.936, 822.123, 818.904, 814.5, 780.024, 736.009, 694.865, 658.499, 625.508, 595.533, 568.288, 543.527, 500.46, 464.298, 433.303, 406.5, 383.06, 362.386, 344.027, 327.635, 312.943, 299.704, 287.693, 276.739, 266.685, 257.4, 219.948, 193.427, 173.13, 156.899, 143.603, 132.71, 123.689, 116.01, 103.297, 93.1895, 85.0622, 78.4199, 72.8141, 68.0052, 63.8394, 60.2008, 57.0051, 54.171, 51.6269, 49.3275, 47.2355, 45.32, 37.7922, 32.6955, 28.8883, 25.8898, 21.5364, 19.9617, 18.6417, 16.4825, 14.7899, 13.4538, 12.38, 11.4823, 10.7192, 10.0652, 9.50038, 9.00955, 8.57818, 8.19351, 7.84778, 7.53481, 7.25, 6.13179, 5.35621, 4.79354, 4.35966, 4.01743, 3.74815, 3.53393, 3.35747, 3.07396, 2.85695, 2.69086, 2.56143, 2.45567, 2.36771, 2.29417, 2.23232, 2.18005, 2.13532, 2.09638, 2.06215, 2.03177, 2.00452, 1.84114, 1.76976, 1.73124, 1.71056, 1.6892, 1.67997, 1.67655, 1.67569, 1.67603, 1.67662, 1.67715]

ICRUstoppingTotal_H2o = [1.769E+02 , 1.984E+02 , 2.184E+02 , 2.370E+02 , 2.544E+02 , 2.864E+02 , 3.153E+02 , 3.420E+02 , 3.667E+02 , 3.900E+02 , 4.120E+02 , 4.329E+02 , 4.745E+02 , 5.110E+02 , 5.437E+02 , 5.733E+02 , 6.001E+02 , 6.245E+02 , 6.467E+02 , 6.671E+02 , 7.028E+02 , 7.324E+02 , 7.569E+02 , 7.768E+02 , 7.927E+02 , 8.050E+02 , 8.142E+02 , 8.205E+02 , 8.243E+02 , 8.260E+02 , 8.258E+02 , 8.239E+02 , 8.206E+02 , 8.161E+02 , 7.814E+02 , 7.371E+02 , 6.969E+02 , 6.613E+02 , 6.294E+02 , 6.006E+02 , 5.744E+02 , 5.504E+02 , 5.080E+02 , 4.719E+02 , 4.406E+02 , 4.132E+02 , 3.891E+02 , 3.680E+02 , 3.492E+02 , 3.325E+02 , 3.175E+02 , 3.039E+02 , 2.917E+02 , 2.805E+02 , 2.702E+02 , 2.608E+02 , 2.229E+02 , 1.957E+02 , 1.749E+02 , 1.586E+02 , 1.454E+02 , 1.344E+02 , 1.251E+02 , 1.172E+02 , 1.042E+02 , 9.404E+01 , 8.586E+01 , 7.911E+01 , 7.343E+01 , 6.858E+01 , 6.438E+01 , 6.071E+01 , 5.747E+01 , 5.460E+01 , 5.202E+01 , 4.969E+01 , 4.759E+01 , 4.567E+01 , 3.815E+01 , 3.292E+01 , 2.905E+01 , 2.607E+01 , 2.175E+01 , 2.013E+01 , 1.876E+01 , 1.656E+01 , 1.488E+01 , 1.354E+01 , 1.245E+01 , 1.154E+01 , 1.078E+01 , 1.013E+01 , 9.559E+00 , 9.063E+00 , 8.625E+00 , 8.236E+00 , 7.888E+00 , 7.573E+00 , 7.289E+00 , 6.192E+00 , 5.445E+00 , 4.903E+00 , 4.492E+00 , 4.170E+00 , 3.911E+00 , 3.698E+00 , 3.520E+00 , 3.241E+00 , 3.032E+00 , 2.871E+00 , 2.743E+00 , 2.640E+00 , 2.556E+00 , 2.485E+00 , 2.426E+00 , 2.376E+00 , 2.333E+00 , 2.296E+00 , 2.264E+00 , 2.236E+00 , 2.211E+00 , 2.070E+00 , 2.021E+00 , 2.004E+00 , 2.001E+00 , 2.012E+00 , 2.031E+00 , 2.052E+00 , 2.072E+00 , 2.091E+00 , 2.109E+00 , 2.126E+00]

ICRUstoppingTotal_PMMA = [2.147E+02 ,2.463E+02 ,2.746E+02 ,3.004E+02 ,3.242E+02 ,3.635E+02 ,3.994E+02 ,4.322E+02 ,4.624E+02 ,4.899E+02 ,5.153E+02 ,5.391E+02 ,5.870E+02 ,6.277E+02 ,6.632E+02 ,6.948E+02 ,7.229E+02 ,7.479E+02 ,7.700E+02 ,7.898E+02 ,8.244E+02 ,8.537E+02 ,8.779E+02 ,8.972E+02 ,9.118E+02 ,9.224E+02 ,9.296E+02 ,9.340E+02 ,9.358E+02 ,9.355E+02 ,9.334E+02 ,9.296E+02 ,9.245E+02 ,9.183E+02 ,8.757E+02 ,8.243E+02 ,7.723E+02 ,7.232E+02 ,6.769E+02 ,6.346E+02 ,5.969E+02 ,5.634E+02 ,5.077E+02 ,4.639E+02 ,4.289E+02 ,4.006E+02 ,3.770E+02 ,3.564E+02 ,3.383E+02 ,3.222E+02 ,3.078E+02 ,2.948E+02 ,2.830E+02 ,2.722E+02 ,2.623E+02 ,2.532E+02 ,2.168E+02 ,1.905E+02 ,1.705E+02 ,1.546E+02 ,1.418E+02 ,1.311E+02 ,1.221E+02 ,1.143E+02 ,1.017E+02 ,9.179E+01 ,8.379E+01 ,7.719E+01 ,7.164E+01 ,6.690E+01 ,6.280E+01 ,5.921E+01 ,5.605E+01 ,5.324E+01 ,5.073E+01 ,4.845E+01 ,4.640E+01 ,4.452E+01 ,3.719E+01 ,3.208E+01 ,2.831E+01 ,2.539E+01 ,2.118E+01 ,1.961E+01 ,1.827E+01 ,1.613E+01 ,1.449E+01 ,1.318E+01 ,1.212E+01 ,1.124E+01 ,1.050E+01 ,9.858E+00 ,9.306E+00 ,8.823E+00 ,8.397E+00 ,8.018E+00 ,7.678E+00 ,7.372E+00 ,7.095E+00 ,6.027E+00 ,5.300E+00 ,4.772E+00 ,4.372E+00 ,4.058E+00 ,3.806E+00 ,3.599E+00 ,3.426E+00 ,3.154E+00 ,2.951E+00 ,2.794E+00 ,2.670E+00 ,2.569E+00 ,2.487E+00 ,2.418E+00 ,2.361E+00 ,2.312E+00 ,2.269E+00 ,2.232E+00 ,2.199E+00 ,2.170E+00 ,2.145E+00 ,2.004E+00 ,1.954E+00 ,1.937E+00 ,1.934E+00 ,1.945E+00 ,1.964E+00 ,1.985E+00 ,2.005E+00 ,2.024E+00 ,2.042E+00 ,2.059E+00]

ICRUbeta = [beta(T) for T in ICRU_E]
ICRURatio = [rho_pmma*ICRUstoppingTotal_PMMA[index]/(ICRUstoppingTotal_H2o[index]) for index in range(len(ICRU_E))]
#bax = brokenaxes(ylims=((0.6, 0.85), (0.97, 5)), hspace=.05)
fig, ax = plt.subplots(figsize=(15, 10))
# Create the plot
ax.plot(x, y_1, label=r'Eq. 54', color="#37eb0a", linewidth=2)
ax.plot(x, y_2, label=r'Eq. 57', color='#ff7f0e', linestyle='--', linewidth=2)
ax.plot(x, y_3, label=r'Eq. 58', color="#fc1100", linestyle=':', linewidth=2)
ax.plot(x, y_4, label=r'$\rho_{PMMA}/\rho_{H_2O}$', color="#000000", linestyle='-.', linewidth=2)
ax.plot(ICRUbeta, ICRURatio, label=r'PStar stopping powers ', color="#0000ff", marker='o', markersize=4, linestyle='None')

ax.grid(True, which='both', linestyle='--', alpha=0.6) # Add grid, labels, and title
ax.set_title(r'Stopping Power Ratio for H$_2$O and PMMA', fontsize=16)
ax.set_xlabel(r'$\beta$', fontsize=14)
ax.set_ylabel(r'$S_{PMMA}/S_{H_2O}$', fontsize=14)
ax.legend(loc='upper center', fontsize=12)
plt.tight_layout()
plt.ylim(1.15, 1.5)
#bax.yscale('log')
#bax.xscale('log')
# Show the plot
plt.show()
